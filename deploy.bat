@echo off
REM –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è Postopus –Ω–∞ Windows

echo üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Postopus...

REM –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
docker --version >nul 2>&1
if %errorlevel% neq 0 (
    echo ‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Desktop –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.
    pause
    exit /b 1
)

docker-compose --version >nul 2>&1
if %errorlevel% neq 0 (
    echo ‚ùå Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.
    pause
    exit /b 1
)

REM –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
echo üìÅ –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏...
if not exist logs mkdir logs
if not exist temp_images mkdir temp_images
if not exist backups mkdir backups
if not exist nginx mkdir nginx
if not exist nginx\ssl mkdir nginx\ssl

REM –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
if not exist .env (
    echo üìù –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª...
    copy env.example .env
    echo ‚ö†Ô∏è  –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Ñ–∞–π–ª —Å –≤–∞—à–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º!
    echo    notepad .env
    pause
)

REM –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Nginx
echo üåê –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Nginx...
(
echo events {
echo     worker_connections 1024;
echo }
echo.
echo http {
echo     upstream postopus_web {
echo         server postopus-web:8000;
echo     }
echo.
echo     server {
echo         listen 80;
echo         server_name _;
echo.
echo         location / {
echo             proxy_pass http://postopus_web;
echo             proxy_set_header Host $host;
echo             proxy_set_header X-Real-IP $remote_addr;
echo             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
echo             proxy_set_header X-Forwarded-Proto $scheme;
echo         }
echo.
echo         location /static/ {
echo             alias /app/web/static/;
echo         }
echo.
echo         location /flower/ {
echo             proxy_pass http://postopus-flower:5555;
echo             proxy_set_header Host $host;
echo             proxy_set_header X-Real-IP $remote_addr;
echo             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
echo             proxy_set_header X-Forwarded-Proto $scheme;
echo         }
echo     }
echo }
) > nginx\nginx.conf

REM –°–æ–∑–¥–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è MongoDB
echo üóÑÔ∏è –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º MongoDB...
if not exist mongo-init mkdir mongo-init
(
echo // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö Postopus
echo db = db.getSiblingDB('postopus'^);
echo.
echo // –°–æ–∑–¥–∞–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏–∏
echo db.createCollection('users'^);
echo db.createCollection('posts'^);
echo db.createCollection('tasks'^);
echo db.createCollection('task_executions'^);
echo db.createCollection('settings'^);
echo db.createCollection('sessions'^);
echo db.createCollection('logs'^);
echo db.createCollection('statistics'^);
echo db.createCollection('health_checks'^);
echo.
echo // –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã
echo db.posts.createIndex({ "id": 1 }, { unique: true }^);
echo db.posts.createIndex({ "status": 1 }^);
echo db.posts.createIndex({ "published_at": 1 }^);
echo db.posts.createIndex({ "created_at": 1 }^);
echo.
echo db.tasks.createIndex({ "id": 1 }, { unique: true }^);
echo db.tasks.createIndex({ "enabled": 1 }^);
echo db.tasks.createIndex({ "session_name": 1 }^);
echo.
echo db.task_executions.createIndex({ "task_id": 1 }^);
echo db.task_executions.createIndex({ "started_at": 1 }^);
echo.
echo db.users.createIndex({ "username": 1 }, { unique: true }^);
echo.
echo // –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
echo db.users.insertOne({
echo     username: "admin",
echo     email: "admin@postopus.local",
echo     hashed_password: "$2b$12$LQv3c1yqBWVHxkd0LHAkCOYz6TtxMQJqhN8/LewdBPj4J/8Qz8K2", // password: admin
echo     is_active: true,
echo     created_at: new Date(^)
echo }^);
echo.
echo print("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö Postopus –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"^);
) > mongo-init\init.js

REM –°–æ–±–∏—Ä–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo üî® –°–æ–±–∏—Ä–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã...
docker-compose down --remove-orphans
docker-compose build --no-cache
docker-compose up -d

REM –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
echo ‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤...
timeout /t 30 /nobreak >nul

REM –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...
docker-compose ps

REM –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏
echo üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏...
docker-compose logs --tail=20

echo ‚úÖ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!
echo.
echo üåê –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost
echo üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–¥–∞—á: http://localhost/flower
echo.
echo üîë –õ–æ–≥–∏–Ω –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é:
echo    –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: admin
echo    –ü–∞—Ä–æ–ª—å: admin
echo.
echo üìù –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
echo    –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤: docker-compose logs -f
echo    –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: docker-compose restart
echo    –û—Å—Ç–∞–Ω–æ–≤–∫–∞: docker-compose down
echo    –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ: deploy.bat
echo.
echo ‚ö†Ô∏è  –ù–µ –∑–∞–±—É–¥—å—Ç–µ:
echo    1. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –≤ nginx\ssl\
echo    2. –ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
echo    3. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –±—Ä–∞–Ω–¥–º–∞—É—ç—Ä –¥–ª—è –ø–æ—Ä—Ç–æ–≤ 80 –∏ 443
echo    4. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ

pause
