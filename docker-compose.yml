version: '3.8'

services:
  # Основное приложение Postopus
  postopus-app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: postopus-app
    restart: unless-stopped
    environment:
      - MONGO_CLIENT=mongodb://mongodb:27017/
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - ./logs:/app/logs
      - ./temp_images:/app/temp_images
      - ./.env:/app/.env
    depends_on:
      - mongodb
      - redis
    networks:
      - postopus-network

  # Веб-интерфейс (FastAPI)
  postopus-web:
    build: 
      context: .
      dockerfile: Dockerfile.web
    container_name: postopus-web
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - MONGO_CLIENT=mongodb://mongodb:27017/
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
    volumes:
      - ./logs:/app/logs
      - ./.env:/app/.env
    depends_on:
      - mongodb
      - redis
      - postopus-app
    networks:
      - postopus-network

  # Celery Worker для фоновых задач
  postopus-worker:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: postopus-worker
    restart: unless-stopped
    command: celery -A src.tasks worker --loglevel=info
    environment:
      - MONGO_CLIENT=mongodb://mongodb:27017/
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - ./logs:/app/logs
      - ./temp_images:/app/temp_images
      - ./.env:/app/.env
    depends_on:
      - mongodb
      - redis
    networks:
      - postopus-network

  # Celery Beat для планировщика
  postopus-scheduler:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: postopus-scheduler
    restart: unless-stopped
    command: celery -A src.tasks beat --loglevel=info
    environment:
      - MONGO_CLIENT=mongodb://mongodb:27017/
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - ./logs:/app/logs
      - ./.env:/app/.env
    depends_on:
      - mongodb
      - redis
    networks:
      - postopus-network

  # MongoDB база данных
  mongodb:
    image: mongo:6.0
    container_name: postopus-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - postopus-network

  # Redis для кэширования и очередей
  redis:
    image: redis:7-alpine
    container_name: postopus-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - postopus-network

  # Nginx для проксирования
  nginx:
    image: nginx:alpine
    container_name: postopus-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - postopus-web
    networks:
      - postopus-network

  # Flower для мониторинга Celery
  flower:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: postopus-flower
    restart: unless-stopped
    command: celery -A src.tasks flower --port=5555
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
    networks:
      - postopus-network

volumes:
  mongodb_data:
  redis_data:

networks:
  postopus-network:
    driver: bridge
