version: '3.8'

services:
  # Main Postopus Web Application
  web:
    build:
      context: .
      target: development
    container_name: postopus-web
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - MONGO_CLIENT=mongodb://mongo:27017/
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=postopus
      - POSTGRES_USER=postopus
      - POSTGRES_PASSWORD=postopus_password
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=dev-secret-key-change-in-production
      - LOG_LEVEL=INFO
      - ENVIRONMENT=development
    volumes:
      - .:/app
      - ./logs:/app/logs
    depends_on:
      - mongo
      - postgres
      - redis
    networks:
      - postopus-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MongoDB Database
  mongo:
    image: mongo:7.0
    container_name: postopus-mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin_password
      - MONGO_INITDB_DATABASE=postopus
    volumes:
      - mongo_data:/data/db
      - ./scripts:/docker-entrypoint-initdb.d:ro
    networks:
      - postopus-network

  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: postopus-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=postopus
      - POSTGRES_USER=postopus
      - POSTGRES_PASSWORD=postopus_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - postopus-network

  # Redis for Caching and Queues
  redis:
    image: redis:7-alpine
    container_name: postopus-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - postopus-network
    command: redis-server --appendonly yes

  # Celery Worker for Background Tasks
  celery:
    build:
      context: .
      target: development
    container_name: postopus-celery
    restart: unless-stopped
    command: celery -A src.tasks.celery_app worker --loglevel=info
    environment:
      - MONGO_CLIENT=mongodb://mongo:27017/
      - POSTGRES_HOST=postgres
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=dev-secret-key-change-in-production
    volumes:
      - .:/app
      - ./logs:/app/logs
    depends_on:
      - mongo
      - postgres
      - redis
    networks:
      - postopus-network

  # Celery Beat Scheduler
  celery-beat:
    build:
      context: .
      target: development
    container_name: postopus-scheduler
    restart: unless-stopped
    command: celery -A src.tasks.celery_app beat --loglevel=info
    environment:
      - MONGO_CLIENT=mongodb://mongo:27017/
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=dev-secret-key-change-in-production
    volumes:
      - .:/app
      - ./logs:/app/logs
    depends_on:
      - mongo
      - redis
    networks:
      - postopus-network

  # Flower for Celery Monitoring
  flower:
    build:
      context: .
      target: development
    container_name: postopus-flower
    restart: unless-stopped
    command: celery -A src.tasks.celery_app flower --port=5555
    ports:
      - "5555:5555"
    environment:
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - redis
    networks:
      - postopus-network

volumes:
  mongo_data:
  postgres_data:
  redis_data:

networks:
  postopus-network:
    driver: bridge
