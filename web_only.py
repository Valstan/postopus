#!/usr/bin/env python3
"""
–û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –∑–∞–ø—É—Å–∫–∞ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Postopus –¥–ª—è Render.com
"""
import os
import sys

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ Python path
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

def main():
    """–ó–∞–ø—É—Å–∫ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    try:
        print("üîß Starting Postopus Web-Only Service...")
        print(f"üìÅ Working directory: {os.getcwd()}")
        print(f"üêç Python path: {sys.path}")
        print(f"üåê Environment: {os.getenv('ENVIRONMENT', 'unknown')}")
        print(f"üóÉÔ∏è DATABASE_URL configured: {'Yes' if os.getenv('DATABASE_URL') else 'No'}")
        
        # Force web server mode - prevent any confusion with Celery
        if 'celery' in ' '.join(sys.argv).lower():
            print("‚ùå ERROR: This script should not run Celery commands!")
            print("‚ùå This is a web-only service. Use python web_only.py")
            sys.exit(1)
        
        from src.web.main_render import app
        import uvicorn
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Ä—Ç –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è (Render.com –∏—Å–ø–æ–ª—å–∑—É–µ—Ç PORT)
        port = int(os.environ.get("PORT", 8000))
        host = os.environ.get("HOST", "0.0.0.0")
        
        print(f"üöÄ Starting Postopus Web Server on {host}:{port}")
        print(f"üì° Service type: WEB SERVER (not worker)")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        uvicorn.run(
            app, 
            host=host, 
            port=port, 
            log_level="info",
            access_log=True,
            reload=False
        )
        
    except ImportError as e:
        print(f"‚ùå Import error: {e}")
        print(f"üìÅ Current directory contents:")
        for item in os.listdir('.'):
            print(f"  - {item}")
        if os.path.exists('src'):
            print(f"üìÅ src directory contents:")
            for item in os.listdir('src'):
                print(f"  - src/{item}")
        sys.exit(1)
    except Exception as e:
        print(f"‚ùå Error starting application: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)

if __name__ == "__main__":
    main()