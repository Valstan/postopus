#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è VK —Ç–æ–∫–µ–Ω–æ–≤ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö Postopus
"""
import os
import sys
import logging
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ src –¥–ª—è –∏–º–ø–æ—Ä—Ç–æ–≤
sys.path.append(os.path.join(os.path.dirname(__file__), 'src'))

from src.web.database import SessionLocal
from src.web.models import VKToken

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# VK —Ç–æ–∫–µ–Ω—ã –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
VK_TOKENS = {
    "VK_TOKEN_OLGA": {
        "token": "vk1.a.YB3vu9mP072pkadsec7VVBDaIjke_VByDUks3QnLaWsbbu28M5SkhDvik6I_97VsdQs9-gSvPQ1U6FBr4a-a866Gu7xcXcPRLWU2UKmThfqAwJXoSS4cfDgap-frRec_Yqg3jZLyl29a-xNcQSsZN74ydv0W7swkFNrr8UHIlkoNQZjiDNJvqB2SxuIuBu3uGU2AiGqdasw9SBN9kDFXAA",
        "region": "olga",
        "group_id": "-123456789",  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π ID –≥—Ä—É–ø–ø—ã
        "description": "VK —Ç–æ–∫–µ–Ω –¥–ª—è Olga"
    },
    "VK_TOKEN_VALSTAN": {
        "token": "vk1.a.gczp291vx4VkA5hZRP9lwpJVtSCTx-c79D7zGM3pmAub0YszQXL-DIK5mY0xry-XEKWbiTzSiADxNAEQRHfUzCH1XsEh-BoCStWNNOp_TBY_GOOzhkQtPfDxbbntkuVHSBy3Jeunedmp_om-28OvYgZy51IPi2jfyh5yic7-oTutbe8NMVsNdAyhfhpcAUPy8J2wiTOWrR0L0QE8KMudrQ",
        "region": "valstan",
        "group_id": "-123456789",  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π ID –≥—Ä—É–ø–ø—ã
        "description": "VK —Ç–æ–∫–µ–Ω –¥–ª—è Valstan"
    },
    "VK_TOKEN_VITA": {
        "token": "vk1.a.h8ZMyCgenUYgB6Ci8MKpi6AFVS9lXy4ndWrVPJu0BT4uncFFM3vmi8qJeUGpW-7X0DBhBWfQHs9qrIzo5CS2LkbpOnNo563B4XtY5DT-JPLYguCRQkmrEdcx7YQQQgzIALlB8bbQeyub32BJtZQvEs12xdcYXBHD85SUxJ2l6cuYjVj0gL5pqMR17xmlbxav3tx83eikViL1JH80Twipdw",
        "region": "vita",
        "group_id": "-123456789",  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π ID –≥—Ä—É–ø–ø—ã
        "description": "VK —Ç–æ–∫–µ–Ω –¥–ª—è Vita"
    },
    "VK_TOKEN_DRAN": {
        "token": "vk1.a.gpR4VWqecUt5pVpregmjWHGCo7S8M4KxLvGLIVj0GTV7W4dDeZLDNIt85RaIIr4goudrvIi__l4w0KyNy1Ve8nxbi87nff8CbLnnZzVmitqC1buw8yd-RnoimfZE27EZDMT3ml738aHPmwXnM9HjQGP0YOUFehhld31BjAiqxLZ35KxShuvSAUTRueJKF9PQpMSblL5LPNCeRry9UvyNJQ",
        "region": "dran",
        "group_id": "-123456789",  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π ID –≥—Ä—É–ø–ø—ã
        "description": "VK —Ç–æ–∫–µ–Ω –¥–ª—è Dran"
    }
}

def add_vk_tokens():
    """–î–æ–±–∞–≤–ª—è–µ—Ç VK —Ç–æ–∫–µ–Ω—ã –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""
    try:
        # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        db = SessionLocal()
        
        logger.info("–ù–∞—á–∏–Ω–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ VK —Ç–æ–∫–µ–Ω–æ–≤ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...")
        
        for token_name, token_data in VK_TOKENS.items():
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–æ–∫–µ–Ω –¥–ª—è —ç—Ç–æ–≥–æ —Ä–µ–≥–∏–æ–Ω–∞
            existing_token = db.query(VKToken).filter(VKToken.region == token_data["region"]).first()
            
            if existing_token:
                logger.info(f"–¢–æ–∫–µ–Ω –¥–ª—è —Ä–µ–≥–∏–æ–Ω–∞ {token_data['region']} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –û–±–Ω–æ–≤–ª—è–µ–º...")
                existing_token.token = token_data["token"]
                existing_token.group_id = token_data["group_id"]
                existing_token.description = token_data["description"]
                existing_token.is_active = True
                existing_token.updated_at = datetime.utcnow()
            else:
                logger.info(f"–î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω –¥–ª—è —Ä–µ–≥–∏–æ–Ω–∞ {token_data['region']}...")
                new_token = VKToken(
                    region=token_data["region"],
                    token=token_data["token"],
                    group_id=token_data["group_id"],
                    description=token_data["description"],
                    is_active=True,
                    created_at=datetime.utcnow(),
                    updated_at=datetime.utcnow()
                )
                db.add(new_token)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        db.commit()
        logger.info("‚úÖ –í—Å–µ VK —Ç–æ–∫–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö!")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        total_tokens = db.query(VKToken).count()
        active_tokens = db.query(VKToken).filter(VKToken.is_active == True).count()
        logger.info(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–æ–∫–µ–Ω–æ–≤: {active_tokens}/{total_tokens} –∞–∫—Ç–∏–≤–Ω—ã—Ö")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤
        logger.info("üìã –°–ø–∏—Å–æ–∫ —Ç–æ–∫–µ–Ω–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:")
        for token in db.query(VKToken).all():
            status = "‚úÖ –ê–∫—Ç–∏–≤–µ–Ω" if token.is_active else "‚ùå –ù–µ–∞–∫—Ç–∏–≤–µ–Ω"
            logger.info(f"  - {token.region}: {status} (ID –≥—Ä—É–ø–ø—ã: {token.group_id})")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–æ–≤: {e}")
        if 'db' in locals():
            db.rollback()
        raise
    finally:
        if 'db' in locals():
            db.close()

def test_vk_connections():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ VK API"""
    try:
        logger.info("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ VK API...")
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º VK —Å–µ—Ä–≤–∏—Å
        from src.services.modern_vk_service import ModernVKService
        
        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞
        vk_service = ModernVKService()
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å
        success = vk_service.initialize()
        
        if success:
            logger.info("‚úÖ VK —Å–µ—Ä–≤–∏—Å —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω!")
            logger.info(f"üìä –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ç–æ–∫–µ–Ω–æ–≤: {len(vk_service.tokens)}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–∫–µ–Ω–∞—Ö
            for region, token in vk_service.tokens.items():
                logger.info(f"  - {region}: {token.description}")
        else:
            logger.warning("‚ö†Ô∏è VK —Å–µ—Ä–≤–∏—Å –Ω–µ —Å–º–æ–≥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è")
            
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ VK –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π: {e}")

if __name__ == "__main__":
    print("üöÄ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ VK —Ç–æ–∫–µ–Ω–æ–≤ –≤ Postopus...")
    print("=" * 50)
    
    try:
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω—ã
        add_vk_tokens()
        print("\n" + "=" * 50)
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        test_vk_connections()
        
        print("\nüéâ –ì–æ—Ç–æ–≤–æ! VK —Ç–æ–∫–µ–Ω—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã –∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω—ã.")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
        sys.exit(1)
